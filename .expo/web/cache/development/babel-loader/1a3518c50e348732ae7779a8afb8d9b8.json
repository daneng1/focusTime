{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"textStyle\", \"size\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/engeldb/Documents/Projects/myProjects/focusTime/src/components/roundedButton.js\";\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { fontSizes, spacing } from \"../utils/sizes\";\nimport { colors } from \"../utils/colors\";\nexport var RoundedButton = function RoundedButton(_ref) {\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$textStyle = _ref.textStyle,\n      textStyle = _ref$textStyle === void 0 ? {} : _ref$textStyle,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 125 : _ref$size,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(TouchableOpacity, {\n    style: [styles(size).radius, style],\n    onPress: props.onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles(size).text, textStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, props.title));\n};\n\nvar styles = function styles(size) {\n  return StyleSheet.create({\n    radius: {\n      borderRadius: size / 2,\n      width: size,\n      height: size,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderColor: '#fff',\n      borderWidth: 2\n    },\n    text: {\n      color: colors.white,\n      fontSize: fontSizes.lg\n    }\n  });\n};","map":{"version":3,"sources":["/Users/engeldb/Documents/Projects/myProjects/focusTime/src/components/roundedButton.js"],"names":["React","fontSizes","spacing","colors","RoundedButton","style","textStyle","size","props","styles","radius","onPress","text","title","StyleSheet","create","borderRadius","width","height","alignItems","justifyContent","borderColor","borderWidth","color","white","fontSize","lg"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,SAAT,EAAoBC,OAApB;AACA,SAASC,MAAT;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAKvB;AAAA,wBAJJC,KAII;AAAA,MAJJA,KAII,2BAJI,EAIJ;AAAA,4BAHJC,SAGI;AAAA,MAHJA,SAGI,+BAHQ,EAGR;AAAA,uBAFJC,IAEI;AAAA,MAFJA,IAEI,0BAFG,GAEH;AAAA,MADDC,KACC;;AACJ,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAACC,MAAM,CAACF,IAAD,CAAN,CAAaG,MAAd,EAAsBL,KAAtB,CADT;AAEE,IAAA,OAAO,EAAEG,KAAK,CAACG,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACF,MAAM,CAACF,IAAD,CAAN,CAAaK,IAAd,EAAoBN,SAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CE,KAAK,CAACK,KAApD,CAHF,CADF;AAOD,CAbM;;AAeP,IAAMJ,MAAM,GAAG,SAATA,MAAS,CAACF,IAAD;AAAA,SACbO,UAAU,CAACC,MAAX,CAAkB;AAChBL,IAAAA,MAAM,EAAE;AACNM,MAAAA,YAAY,EAAET,IAAI,GAAG,CADf;AAENU,MAAAA,KAAK,EAAEV,IAFD;AAGNW,MAAAA,MAAM,EAAEX,IAHF;AAINY,MAAAA,UAAU,EAAE,QAJN;AAKNC,MAAAA,cAAc,EAAE,QALV;AAMNC,MAAAA,WAAW,EAAE,MANP;AAONC,MAAAA,WAAW,EAAE;AAPP,KADQ;AAUhBV,IAAAA,IAAI,EAAE;AAAEW,MAAAA,KAAK,EAAEpB,MAAM,CAACqB,KAAhB;AAAuBC,MAAAA,QAAQ,EAAExB,SAAS,CAACyB;AAA3C;AAVU,GAAlB,CADa;AAAA,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet } from 'react-native';\n\nimport { fontSizes, spacing } from '../utils/sizes';\nimport { colors } from '../utils/colors';\n\nexport const RoundedButton = ({\n  style = {},\n  textStyle = {},\n  size = 125,\n  ...props\n}) => {\n  return (\n    <TouchableOpacity\n      style={[styles(size).radius, style]}\n      onPress={props.onPress}>\n      <Text style={[styles(size).text, textStyle]}>{props.title}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = (size) =>\n  StyleSheet.create({\n    radius: {\n      borderRadius: size / 2,\n      width: size,\n      height: size,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderColor: '#fff',\n      borderWidth: 2,\n    },\n    text: { color: colors.white, fontSize: fontSizes.lg },\n  });\n\n// check that the code fot styles is correct.\n"]},"metadata":{},"sourceType":"module"}