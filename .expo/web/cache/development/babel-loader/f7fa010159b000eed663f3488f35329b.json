{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/engeldb/Documents/Projects/myProjects/focusTime/src/components/countdown.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { fontSizes, spacing } from \"../utils/sizes\";\nimport { colors } from \"../utils/colors\";\n\nvar minutesToMillis = function minutesToMillis(min) {\n  return min * 1000 * 60;\n};\n\nvar formatTime = function formatTime(time) {\n  return time < 10 ? \"0\" + time : time;\n};\n\nexport var Countdown = function Countdown(_ref) {\n  var _ref$minutes = _ref.minutes,\n      minutes = _ref$minutes === void 0 ? 20 : _ref$minutes,\n      _ref$isPaused = _ref.isPaused,\n      isPaused = _ref$isPaused === void 0 ? true : _ref$isPaused;\n  var interval = React.useRef(null);\n\n  var countdown = function countdown() {\n    setMillis(function (time) {\n      if (time === 0) {\n        return time;\n      }\n\n      var timeLeft = time - 1000;\n      return timeLeft;\n    });\n  };\n\n  useEffect(function () {\n    if (isPaused) {\n      return;\n    }\n\n    interval.current = setInterval(countdown, 1000);\n    return function () {\n      return clearInterval(interval.current);\n    };\n  }, [isPaused]);\n\n  var _useState = useState(minutesToMillis(minutes)),\n      _useState2 = _slicedToArray(_useState, 2),\n      millis = _useState2[0],\n      setMillis = _useState2[1];\n\n  var minute = Math.floor(millis / 1000 / 60) % 60;\n  var seconds = Math.floor(millis / 1000) % 60;\n  return React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, formatTime(minute), \":\", formatTime(seconds));\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: fontSizes.xxxl,\n    fontWeight: 'bold',\n    color: colors.white,\n    width: 300,\n    justifyContent: 'center',\n    textAlign: 'center',\n    backgroundColor: 'rgba(94, 132, 226, 0.3)'\n  }\n});","map":{"version":3,"sources":["/Users/engeldb/Documents/Projects/myProjects/focusTime/src/components/countdown.js"],"names":["React","useState","useEffect","fontSizes","spacing","colors","minutesToMillis","min","formatTime","time","Countdown","minutes","isPaused","interval","useRef","countdown","setMillis","timeLeft","current","setInterval","clearInterval","millis","minute","Math","floor","seconds","styles","text","StyleSheet","create","fontSize","xxxl","fontWeight","color","white","width","justifyContent","textAlign","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAGA,SAASC,SAAT,EAAoBC,OAApB;AACA,SAASC,MAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD;AAAA,SAASA,GAAG,GAAG,IAAN,GAAa,EAAtB;AAAA,CAAxB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAWA,IAAI,GAAG,EAAP,SAAgBA,IAAhB,GAAyBA,IAApC;AAAA,CAAnB;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAGjB;AAAA,0BAFNC,OAEM;AAAA,MAFNA,OAEM,6BAFI,EAEJ;AAAA,2BADNC,QACM;AAAA,MADNA,QACM,8BADK,IACL;AACN,MAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAN,CAAa,IAAb,CAAjB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBC,IAAAA,SAAS,CAAC,UAACP,IAAD,EAAU;AAClB,UAAIA,IAAI,KAAK,CAAb,EAAgB;AAEd,eAAOA,IAAP;AACD;;AACD,UAAMQ,QAAQ,GAAGR,IAAI,GAAG,IAAxB;AAEA,aAAOQ,QAAP;AACD,KARQ,CAAT;AASD,GAVD;;AAYAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGU,QAAH,EAAa;AACX;AACD;;AACDC,IAAAA,QAAQ,CAACK,OAAT,GAAmBC,WAAW,CAACJ,SAAD,EAAY,IAAZ,CAA9B;AAEA,WAAO;AAAA,aAAMK,aAAa,CAACP,QAAQ,CAACK,OAAV,CAAnB;AAAA,KAAP;AACD,GAPQ,EAON,CAACN,QAAD,CAPM,CAAT;;AASA,kBAA4BX,QAAQ,CAACK,eAAe,CAACK,OAAD,CAAhB,CAApC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAeL,SAAf;;AAEA,MAAMM,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAAT,GAAgB,EAA3B,IAAiC,EAAhD;AACA,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,EAA5C;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,UAAU,CAACc,MAAD,CADb,OACwBd,UAAU,CAACiB,OAAD,CADlC,CADF;AAKD,CArCM;AAuCP,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,QAAQ,EAAE3B,SAAS,CAAC4B,IADhB;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,KAAK,EAAE5B,MAAM,CAAC6B,KAHV;AAIJC,IAAAA,KAAK,EAAE,GAJH;AAKJC,IAAAA,cAAc,EAAE,QALZ;AAMJC,IAAAA,SAAS,EAAE,QANP;AASJC,IAAAA,eAAe,EAAE;AATb;AADyB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\n\nimport { fontSizes, spacing } from '../utils/sizes';\nimport { colors } from '../utils/colors';\n\nconst minutesToMillis = (min) => min * 1000 * 60;\nconst formatTime = (time) => (time < 10 ? `0${time}` : time);\n\nexport const Countdown = ({ \n  minutes = 20, \n  isPaused = true,\n  }) => {\n  const interval = React.useRef(null);\n\n  const countdown = () => {\n    setMillis((time) => {\n      if (time === 0) {\n        //do more stuff\n        return time;\n      }\n      const timeLeft = time - 1000;\n      //report the progress\n      return timeLeft;\n    });\n  };\n\n  useEffect(() => {\n    if(isPaused) {\n      return;\n    }\n    interval.current = setInterval(countdown, 1000);\n\n    return () => clearInterval(interval.current);\n  }, [isPaused])\n\n  const [millis, setMillis] = useState(minutesToMillis(minutes));\n\n  const minute = Math.floor(millis / 1000 / 60) % 60;\n  const seconds = Math.floor(millis / 1000) % 60;\n\n  return (\n    <Text style={styles.text}>\n      {formatTime(minute)}:{formatTime(seconds)}\n    </Text>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: fontSizes.xxxl,\n    fontWeight: 'bold',\n    color: colors.white,\n    width: 300,\n    justifyContent: 'center',\n    textAlign: 'center',\n    // paddingLeft: spacing.xxl,\n    // paddingRight: spacing.xxl,\n    backgroundColor: 'rgba(94, 132, 226, 0.3)',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}